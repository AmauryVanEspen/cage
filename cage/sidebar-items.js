initSidebarItems({"enum":[["ErrorKind",""],["PodOrService","Represents either a `Pod` object or a `Service` object."],["PodType","Indicates whether a pod is a regular service or a one-shot task."]],"fn":[["err","Create an error using a string literal.  (This exists mostly so that clippy doesn't complain about `err!` expanding to `format!` with no arguments.)"],["version","The version of this crate."]],"macro":[["err","Create an error using a format string and arguments."]],"mod":[["args","Data structures representing arguments that we can pass to `docker-compose` and other command-line tools."],["cmd","Various commands which can be performed on a project, corresponding to CLI entry points."],["command_runner","Utilities for running and testing shell commands."],["dir","Utilities for finding and working with project directories."],["hook","Hooks that are run during cage execution."],["plugins","Plugin support."]],"struct":[["AllFiles","An iterator over all the `dc::File` objects associated with a pod, in all overrides."],["DefaultTags","This is typically used to incorporate image tags for specific builds generated by a continuous integration system (such as [Go][GoCD])."],["Error",""],["Override","An `Override` is a collection of extensions to a project's basic pods. Overrides are typically used to represent deployment environments: test, development and production."],["OverrideFiles","An iterator over this pods overrides and their associated files."],["Overrides","An iterator over the overrides in a project."],["Pod","A pod, specified by `pods/$NAME.yml` and zero or more `pods/overrides/*/*.yml` overrides that we can apply to it."],["Pods","An iterator over the pods in a project."],["Project","A `cage` project, which is represented as a directory containing a `pods` subdirectory."],["ProjectConfig","Configuration information about a project, read in from `PROJECT_CONFIG_PATH`."],["Repo","A single repository."],["RepoIter","An iterator over all repositories associated with this project."],["Repos","All the git repositories associated with a project."]],"trait":[["ChainErr",""]],"type":[["Result",""]]});